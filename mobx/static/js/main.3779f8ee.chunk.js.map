{"version":3,"sources":["components/header.js","stores/trackerStore.js","components/button.js","hooks/useInterval.js","utils.js","components/timer.js","components/table.js","components/totalTime.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","role","href","tracker","title","isTracking","start","currentSession","end","Date","now","duration","Math","round","sessions","push","makeObservable","this","observable","totalTime","computed","toggle","action","length","reduce","acc","cur","variants","stop","observer","variant","children","trackerStore","onClick","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","getSeconds","counter","floor","toString","padStart","getMinutes","getHours","useState","setCounter","interval","Row","toLocaleString","data","map","item","colSpan","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3779f8ee.chunk.js","sourcesContent":["export default function Header() {\n  return (\n    <header className=\"flex items-center justify-between p-8\">\n      <div className=\"flex\">\n        <span role=\"img\" aria-label=\"Clock\" className=\"text-4xl\">\n          ðŸ•‘\n        </span>\n        <p className=\"ml-4 font-mono text-2xl font-bold\">Time Tracker App</p>\n      </div>\n      <a className=\"text-xl underline hover:no-underline\" href=\"../\">\n        Back to other implementations\n      </a>\n    </header>\n  );\n}\n","import { makeObservable, observable, computed, action } from \"mobx\";\n\nclass Tracker {\n  isTracking = false;\n  sessions = [];\n  currentSession = null;\n\n  constructor(title) {\n    makeObservable(this, {\n      isTracking: observable,\n      sessions: observable,\n      currentSession: observable,\n      totalTime: computed,\n      toggle: action,\n    });\n  }\n\n  toggle = () => {\n    if (this.isTracking) {\n      const start = this.currentSession.start;\n      const end = Date.now();\n      const duration = Math.round((end - start) / 1000) * 1000;\n      this.sessions.push({ start, end, duration });\n      this.currentSession = null;\n    } else {\n      const start = Date.now();\n      this.currentSession = { start };\n    }\n    this.isTracking = !this.isTracking;\n  };\n\n  get totalTime() {\n    const sessions = this.sessions;\n\n    if (sessions.length < 1) return 0;\n    return sessions.reduce((acc, cur) => (acc += cur.duration), 0);\n  }\n}\n\nconst tracker = new Tracker();\n\nexport default tracker;\n","import React from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport trackerStore from \"../stores/trackerStore\";\nconst variants = {\n  start: \"bg-yellow-500 hover:bg-yellow-600\",\n  stop: \"bg-red-500 hover:bg-red-600\",\n};\nconst Button = ({ variant = \"start\", children }) => {\n  const isTracking = trackerStore.isTracking;\n  return (\n    <button\n      className={\n        \"py-4 px-8  text-gray-100 font-bold text-xl \" +\n        variants[isTracking ? \"stop\" : \"start\"]\n      }\n      onClick={trackerStore.toggle}\n    >\n      {isTracking ? \"Stop tracking\" : \"Start tracking\"}\n    </button>\n  );\n};\n// export default Button;\nexport default observer(Button);\n","import { useRef, useEffect } from \"react\";\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","export const getSeconds = (counter) =>\n  Math.floor((counter / 1000) % 60)\n    .toString()\n    .padStart(2, \"0\");\nexport const getMinutes = (counter) =>\n  Math.floor((counter / (1000 * 60)) % 60)\n    .toString()\n    .padStart(2, \"0\");\nexport const getHours = (counter) =>\n  Math.floor(counter / (1000 * 60 * 60))\n    .toString()\n    .padStart(2, \"0\");\n","import { useState, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport trackerStore from \"../stores/trackerStore\";\nimport { useInterval } from \"../hooks/useInterval\";\nimport { getHours, getMinutes, getSeconds } from \"../utils\";\n\nconst Timer = () => {\n  const [counter, setCounter] = useState(0);\n  const [interval, setInterval] = useState(null);\n  const isTracking = trackerStore.isTracking;\n\n  // start/stop counting intervals, when they are not needed\n  useEffect(() => {\n    if (!isTracking) {\n      setInterval(null);\n      setCounter(0);\n    } else {\n      setInterval(1000);\n    }\n  }, [isTracking]);\n\n  useInterval(() => {\n    if (isTracking) {\n      setCounter(counter + 1000);\n    }\n  }, interval);\n\n  return (\n    <div className=\"my-12 text-8xl\">\n      <span className=\"px-2 py-4 text-blue-900 bg-gray-200\">\n        {getHours(counter)}\n      </span>\n      <span className=\"text-gray-200\">:</span>\n      <span className=\"px-2 py-4 text-blue-900 bg-gray-200\">\n        {getMinutes(counter)}\n      </span>\n      <span className=\"text-gray-200\">:</span>\n      <span className=\"px-2 py-4 text-blue-900 bg-gray-200\">\n        {getSeconds(counter)}\n      </span>\n    </div>\n  );\n};\n\nexport default observer(Timer);\n","import { observer } from \"mobx-react-lite\";\nimport trackerStore from \"../stores/trackerStore\";\n\nimport { getHours, getMinutes, getSeconds } from \"../utils\";\n\nconst Row = ({ start, end, duration }) => {\n  return (\n    <tr className=\"bg-white border-4 border-gray-200\">\n      <td className=\"px-16 py-2\">{new Date(start).toLocaleString()}</td>\n      <td className=\"px-16 py-2\">{new Date(end).toLocaleString()}</td>\n      <td className=\"px-16 py-2\">\n        {getHours(duration)}:{getMinutes(duration)}:{getSeconds(duration)}\n      </td>\n    </tr>\n  );\n};\n\nconst Table = () => {\n  const data = trackerStore.sessions;\n  return (\n    <table className=\"min-w-full table-auto\">\n      <thead className=\"justify-between\">\n        <tr className=\"bg-gray-800\">\n          <th className=\"px-16 py-2\">\n            <span className=\"text-gray-200\">Started at</span>\n          </th>\n          <th className=\"px-16 py-2\">\n            <span className=\"text-gray-200\">Ended at</span>\n          </th>\n          <th className=\"px-16 py-2\">\n            <span className=\"text-gray-200\">Duration</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody className=\"h-4 text-gray-800 bg-gray-200\">\n        {data ? (\n          data.map((item) => <Row key={item.start} {...item} />)\n        ) : (\n          <tr className=\"text-gray-800 bg-white border-4 border-gray-200\">\n            <td colSpan=\"4\">No data tracked yet</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nexport default observer(Table);\n","import { observer } from \"mobx-react-lite\";\nimport { getHours, getMinutes, getSeconds } from \"../utils\";\nimport trackerStore from \"../stores/trackerStore\";\n\nconst TotalTime = () => {\n  const totalTime = trackerStore.totalTime;\n\n  return (\n    <div className=\"mt-auto text-5xl text-center text-yellow-400\">\n      <span className=\"pr-16\">Total time:</span>\n      <span>\n        {getHours(totalTime)}:{getMinutes(totalTime)}:{getSeconds(totalTime)}\n      </span>\n    </div>\n  );\n};\n\nexport default observer(TotalTime);\n","import Header from \"./components/header\";\nimport Button from \"./components/button\";\nimport Timer from \"./components/timer\";\nimport Table from \"./components/table\";\nimport TotalTime from \"./components/totalTime\";\nfunction App() {\n  return (\n    <div className=\"w-full h-screen text-gray-100 bg-blue-900\">\n      <Header />\n      <main className=\"flex flex-col mx-4\">\n        <div className=\"mt-24 text-center\">\n          <Timer interval={600000} />\n          <Button />\n        </div>\n        <div className=\"mt-16 mb-16 text-center\">\n          <Table />\n        </div>\n        <TotalTime />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}