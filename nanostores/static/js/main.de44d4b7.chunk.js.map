{"version":3,"sources":["components/header.js","store/sessions.js","store/timer.js","store/tracker.js","components/button.js","utils.js","components/timer.js","components/table.js","store/totalTime.js","components/totalTime.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","role","href","sessions","createStore","set","updating","timer","tracker","isTracking","startedAt","toggle","getValue","Date","now","subscribe","setInterval","clearInterval","start","end","duration","Math","round","addSession","variants","stop","Button","variant","children","useStore","onClick","getSeconds","counter","toString","padStart","getMinutes","getHours","Timer","time","Row","toLocaleString","Table","data","length","map","item","colSpan","totalTime","createDerived","allSessions","reduce","acc","cur","TotalTime","App","interval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAe,SAASA,IACtB,OACE,yBAAQC,UAAU,wCAAlB,UACE,sBAAKA,UAAU,OAAf,UACE,sBAAMC,KAAK,MAAM,aAAW,QAAQD,UAAU,WAA9C,0BAGA,mBAAGA,UAAU,oCAAb,iCAEF,mBAAGA,UAAU,uCAAuCE,KAAK,MAAzD,8C,iCCPAC,EAAWC,aAAY,WAC3BD,EAASE,IAAI,OCDf,IAIIC,EAJEC,EAAQH,aAAY,WACxBG,EAAMF,IAAI,MCAZ,IAAMG,EAAUJ,aAAY,WAC1BI,EAAQH,IAAI,CAAEI,YAAY,EAAOC,UAAW,UAG9C,SAASC,IACP,IAAMF,EAAaG,YAASJ,GAASC,WAC/BC,EAAYD,EAAaG,YAASJ,GAASE,UAAYG,KAAKC,MAClEN,EAAQH,IAAI,CAAEI,YAAaA,EAAYC,cAGzCF,EAAQO,WAAU,YAChB,OADoC,EAAjBN,gBDJnBH,EAAWU,aAAY,WACrBT,EAAMF,IAAIO,YAASL,GAAS,OAC3B,OAIHU,cAAcX,GACdC,EAAMF,IAAI,QACVC,EAAW,UCAbE,EAAQO,WAAU,YAAgC,IAA7BN,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAC/B,IAAKD,EAAY,OFZnB,SAAoBS,GAClB,GAAKA,EAAL,CACA,IAAMC,EAAMN,KAAKC,MACXM,EAA8C,IAAnCC,KAAKC,OAAOH,EAAMD,GAAS,KAE5Cf,EAASE,IAAT,sBAAiBO,YAAST,IAA1B,CAAqC,CAAEe,QAAOC,MAAKC,gBEO3BG,CAAWb,MCdrC,IAAMc,EAAW,CACfN,MAAO,oCACPO,KAAM,+BAmBOC,EAhBA,SAAC,GAAoC,EAAlCC,QAAkC,EAAfC,SAAgB,IAC3CnB,EAAeoB,YAASrB,GAAxBC,WAER,OACE,wBACEqB,QAASnB,EACTX,UACE,8CACAwB,EAASf,EAAa,OAAS,SAJnC,SAOGA,EAAa,gBAAkB,oBCpBzBsB,EAAa,SAACC,GAAD,OACxBX,KAAKC,MAAOU,EAAU,IAAQ,IAC3BC,WACAC,SAAS,EAAG,MACJC,EAAa,SAACH,GAAD,OACxBX,KAAKC,MAAOU,EAAO,IAAkB,IAClCC,WACAC,SAAS,EAAG,MACJE,EAAW,SAACJ,GAAD,OACtBX,KAAKC,MAAMU,EAAO,MACfC,WACAC,SAAS,EAAG,MCPF,SAASG,IACtB,IAAMC,EAAOT,YAAStB,GAEtB,OACE,sBAAKP,UAAU,iBAAf,UACE,sBAAMA,UAAU,sCAAhB,SACGoC,EAASE,KAEZ,sBAAMtC,UAAU,gBAAhB,eACA,sBAAMA,UAAU,sCAAhB,SACGmC,EAAWG,KAEd,sBAAMtC,UAAU,gBAAhB,eACA,sBAAMA,UAAU,sCAAhB,SACG+B,EAAWO,Q,YCddC,EAAM,SAAC,GAA8B,IAA5BrB,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SACzB,OACE,qBAAIpB,UAAU,oCAAd,UACE,oBAAIA,UAAU,aAAd,SAA4B,IAAIa,KAAKK,GAAOsB,mBAC5C,oBAAIxC,UAAU,aAAd,SAA4B,IAAIa,KAAKM,GAAKqB,mBAC1C,qBAAIxC,UAAU,aAAd,UACGoC,EAAShB,GADZ,IACwBe,EAAWf,GADnC,IAC+CW,EAAWX,UAMjD,SAASqB,IACtB,IAAMC,EAAOb,YAAS1B,GACtB,OACE,wBAAOH,UAAU,wBAAjB,UACE,uBAAOA,UAAU,kBAAjB,SACE,qBAAIA,UAAU,cAAd,UACE,oBAAIA,UAAU,aAAd,SACE,sBAAMA,UAAU,gBAAhB,0BAEF,oBAAIA,UAAU,aAAd,SACE,sBAAMA,UAAU,gBAAhB,wBAEF,oBAAIA,UAAU,aAAd,SACE,sBAAMA,UAAU,gBAAhB,6BAIN,uBAAOA,UAAU,gCAAjB,SACG0C,GAAQA,EAAKC,OAAS,EACrBD,EAAKE,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,eAA0BA,GAAhBA,EAAK3B,UAElC,oBAAIlB,UAAU,kDAAd,SACE,oBAAI8C,QAAQ,IAAZ,wC,YCnCCC,EAAYC,YAAc7C,GAAU,SAAC8C,GAChD,OAAOA,EAAYC,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAOC,EAAIhC,WAAW,MCalDiC,EAbG,WAChB,IAAMf,EAAOT,YAASkB,GAEtB,OACE,sBAAK/C,UAAU,+CAAf,UACE,sBAAMA,UAAU,QAAhB,yBACA,iCACGoC,EAASE,GADZ,IACoBH,EAAWG,GAD/B,IACuCP,EAAWO,UCYzCgB,MAlBf,WACE,OACE,sBAAKtD,UAAU,4CAAf,UACE,cAACD,EAAD,IACA,uBAAMC,UAAU,qBAAhB,UACE,sBAAKA,UAAU,oBAAf,UACE,cAACqC,EAAD,CAAOkB,SAAU,MACjB,cAAC,EAAD,gCAEF,qBAAKvD,UAAU,0BAAf,SACE,cAACyC,EAAD,MAEF,cAAC,EAAD,WCLOe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.de44d4b7.chunk.js","sourcesContent":["export default function Header() {\n  return (\n    <header className=\"flex items-center justify-between p-8\">\n      <div className=\"flex\">\n        <span role=\"img\" aria-label=\"Clock\" className=\"text-4xl\">\n          ðŸ•‘\n        </span>\n        <p className=\"ml-4 font-mono text-2xl font-bold\">Time Tracker App</p>\n      </div>\n      <a className=\"text-xl underline hover:no-underline\" href=\"../\">\n        Back to other implementations\n      </a>\n    </header>\n  );\n}\n","import { createStore, getValue } from \"nanostores\";\n\nconst sessions = createStore(() => {\n  sessions.set([]);\n});\n\nfunction addSession(start) {\n  if (!start) return;\n  const end = Date.now();\n  const duration = Math.round((end - start) / 1000) * 1000;\n\n  sessions.set([...getValue(sessions), { start, end, duration }]);\n}\n\nexport { sessions, addSession };\n","import { createStore, getValue } from \"nanostores\";\n\nconst timer = createStore(() => {\n  timer.set(0);\n});\n\nlet updating;\n\nfunction startTimer() {\n  updating = setInterval(() => {\n    timer.set(getValue(timer) + 1000);\n  }, 1000);\n}\n\nfunction stopTimer() {\n  clearInterval(updating);\n  timer.set(0);\n  updating = null;\n}\nexport { timer, startTimer, stopTimer };\n","import { createStore, getValue } from \"nanostores\";\nimport { addSession } from \"./sessions\";\nimport { startTimer, stopTimer } from \"./timer\";\nconst tracker = createStore(() => {\n  tracker.set({ isTracking: false, startedAt: null });\n});\n\nfunction toggle() {\n  const isTracking = getValue(tracker).isTracking;\n  const startedAt = isTracking ? getValue(tracker).startedAt : Date.now();\n  tracker.set({ isTracking: !isTracking, startedAt });\n}\n\ntracker.subscribe(({ isTracking }) => {\n  return isTracking ? startTimer() : stopTimer();\n});\n\ntracker.subscribe(({ isTracking, startedAt }) => {\n  if (!isTracking) return addSession(startedAt);\n  return;\n});\n\nexport { tracker, toggle };\n","import React from \"react\";\nimport { useStore } from \"nanostores/react\";\nimport { tracker, toggle } from \"../store/tracker\";\n\nconst variants = {\n  start: \"bg-yellow-500 hover:bg-yellow-600\",\n  stop: \"bg-red-500 hover:bg-red-600\",\n};\n\nconst Button = ({ variant = \"start\", children }) => {\n  const { isTracking } = useStore(tracker);\n\n  return (\n    <button\n      onClick={toggle}\n      className={\n        \"py-4 px-8  text-gray-100 font-bold text-xl \" +\n        variants[isTracking ? \"stop\" : \"start\"]\n      }\n    >\n      {isTracking ? \"Stop tracking\" : \"Start tracking\"}\n    </button>\n  );\n};\n\nexport default Button;\n","export const getSeconds = (counter) =>\n  Math.round((counter / 1000) % 60)\n    .toString()\n    .padStart(2, \"0\");\nexport const getMinutes = (counter) =>\n  Math.round((counter / (1000 * 60)) % 60)\n    .toString()\n    .padStart(2, \"0\");\nexport const getHours = (counter) =>\n  Math.round(counter / (1000 * 60 * 60))\n    .toString()\n    .padStart(2, \"0\");\n","import { timer } from \"../store/timer\";\nimport { useStore } from \"nanostores/react\";\nimport { getHours, getMinutes, getSeconds } from \"../utils\";\n\nexport default function Timer() {\n  const time = useStore(timer);\n\n  return (\n    <div className=\"my-12 text-8xl\">\n      <span className=\"px-2 py-4 text-blue-900 bg-gray-200\">\n        {getHours(time)}\n      </span>\n      <span className=\"text-gray-200\">:</span>\n      <span className=\"px-2 py-4 text-blue-900 bg-gray-200\">\n        {getMinutes(time)}\n      </span>\n      <span className=\"text-gray-200\">:</span>\n      <span className=\"px-2 py-4 text-blue-900 bg-gray-200\">\n        {getSeconds(time)}\n      </span>\n    </div>\n  );\n}\n","import { useStore } from \"nanostores/react\";\nimport { sessions } from \"../store/sessions\";\nimport { getHours, getMinutes, getSeconds } from \"../utils\";\n\nconst Row = ({ start, end, duration }) => {\n  return (\n    <tr className=\"bg-white border-4 border-gray-200\">\n      <td className=\"px-16 py-2\">{new Date(start).toLocaleString()}</td>\n      <td className=\"px-16 py-2\">{new Date(end).toLocaleString()}</td>\n      <td className=\"px-16 py-2\">\n        {getHours(duration)}:{getMinutes(duration)}:{getSeconds(duration)}\n      </td>\n    </tr>\n  );\n};\n\nexport default function Table() {\n  const data = useStore(sessions);\n  return (\n    <table className=\"min-w-full table-auto\">\n      <thead className=\"justify-between\">\n        <tr className=\"bg-gray-800\">\n          <th className=\"px-16 py-2\">\n            <span className=\"text-gray-200\">Started at</span>\n          </th>\n          <th className=\"px-16 py-2\">\n            <span className=\"text-gray-200\">Ended at</span>\n          </th>\n          <th className=\"px-16 py-2\">\n            <span className=\"text-gray-200\">Duration</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody className=\"h-4 text-gray-800 bg-gray-200\">\n        {data && data.length > 0 ? (\n          data.map((item) => <Row key={item.start} {...item} />)\n        ) : (\n          <tr className=\"text-gray-800 bg-white border-4 border-gray-200\">\n            <td colSpan=\"4\">No data tracked yet</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n}\n","import { createDerived } from \"nanostores\";\nimport { sessions } from \"./sessions\";\n\nexport const totalTime = createDerived(sessions, (allSessions) => {\n  return allSessions.reduce((acc, cur) => (acc += cur.duration), 0);\n});\n","import { useStore } from \"nanostores/react\";\nimport { totalTime } from \"../store/totalTime\";\nimport { getHours, getMinutes, getSeconds } from \"../utils\";\n\nconst TotalTime = () => {\n  const time = useStore(totalTime);\n\n  return (\n    <div className=\"mt-auto text-5xl text-center text-yellow-400\">\n      <span className=\"pr-16\">Total time:</span>\n      <span>\n        {getHours(time)}:{getMinutes(time)}:{getSeconds(time)}\n      </span>\n    </div>\n  );\n};\n\nexport default TotalTime;\n","import Header from \"./components/header\";\nimport Button from \"./components/button\";\nimport Timer from \"./components/timer\";\nimport Table from \"./components/table\";\nimport TotalTime from \"./components/totalTime\";\nfunction App() {\n  return (\n    <div className=\"w-full h-screen text-gray-100 bg-blue-900\">\n      <Header />\n      <main className=\"flex flex-col mx-4\">\n        <div className=\"mt-24 text-center\">\n          <Timer interval={600000} />\n          <Button>Start tracking</Button>\n        </div>\n        <div className=\"mt-16 mb-16 text-center\">\n          <Table />\n        </div>\n        <TotalTime />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}