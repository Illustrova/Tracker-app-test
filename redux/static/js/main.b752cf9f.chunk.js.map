{"version":3,"sources":["components/header.js","features/trackerSlice.js","components/button.js","hooks/useInterval.js","utils.js","components/timer.js","components/table.js","components/total-time.js","App.js","store/index.js","index.js"],"names":["Header","className","role","href","trackerSlice","createSlice","name","initialState","isTracking","data","currentSession","totalTime","reducers","toggle","state","start","Date","now","sessionStart","sessionEnd","sessionDuration","Math","round","push","end","duration","actions","variants","stop","Button","dispatch","useDispatch","useSelector","tracker","variant","onClick","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","getSeconds","counter","floor","toString","padStart","getMinutes","getHours","Timer","useState","setCounter","interval","Row","toLocaleString","Table","map","item","colSpan","TotalTime","App","configureStore","reducer","trackerReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.b752cf9f.chunk.js","sourcesContent":["export default function Header() {\n  return (\n    <header className=\"flex items-center justify-between p-8\">\n      <div className=\"flex\">\n        <span role=\"img\" aria-label=\"Clock\" className=\"text-4xl\">\n          ðŸ•‘\n        </span>\n        <p className=\"ml-4 font-mono text-2xl font-bold\">Time Tracker App</p>\n      </div>\n      <a className=\"text-xl underline hover:no-underline\" href=\"../\">\n        Back to other implementations\n      </a>\n    </header>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const trackerSlice = createSlice({\n  name: \"tracker\",\n  initialState: {\n    isTracking: false,\n    data: [],\n    currentSession: null,\n    totalTime: 0,\n  },\n  reducers: {\n    toggle: (state) => {\n      // toggle state\n      state.isTracking = !state.isTracking;\n\n      const { isTracking, currentSession } = state;\n\n      // end session\n      if (!isTracking) {\n        const sessionStart = currentSession?.start;\n        if (sessionStart) {\n          const sessionEnd = Date.now();\n          const sessionDuration =\n            Math.round((sessionEnd - sessionStart) / 1000) * 1000; //round each value to seconds to avoid incorrect data due to ms difference\n          state.data.push({\n            ...currentSession,\n            end: sessionEnd,\n            duration: sessionDuration,\n          });\n          state.currentSession = null;\n          state.totalTime += sessionDuration;\n        }\n        // start session\n      } else {\n        state.currentSession = { start: Date.now() };\n      }\n    },\n  },\n});\n\nexport const { toggle } = trackerSlice.actions;\n\nexport default trackerSlice.reducer;\n","import { useDispatch, useSelector } from \"react-redux\";\n\nimport { toggle } from \"../features/trackerSlice\";\n\nconst variants = {\n  start: \"bg-yellow-500 hover:bg-yellow-600\",\n  stop: \"bg-red-500 hover:bg-red-600\",\n};\nconst Button = () => {\n  const dispatch = useDispatch();\n  const isTracking = useSelector((state) => state.tracker.isTracking);\n\n  const variant = isTracking ? \"stop\" : \"start\";\n  return (\n    <button\n      className={\n        \"py-4 px-8  text-gray-100 font-bold text-xl \" + variants[variant]\n      }\n      onClick={() => dispatch(toggle())}\n    >\n      {isTracking ? \"Stop tracking\" : \"Start tracking\"}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useRef, useEffect } from \"react\";\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","export const getSeconds = (counter) =>\n  Math.floor((counter / 1000) % 60)\n    .toString()\n    .padStart(2, \"0\");\nexport const getMinutes = (counter) =>\n  Math.floor((counter / (1000 * 60)) % 60)\n    .toString()\n    .padStart(2, \"0\");\nexport const getHours = (counter) =>\n  Math.floor(counter / (1000 * 60 * 60))\n    .toString()\n    .padStart(2, \"0\");\n","import { useSelector } from \"react-redux\";\nimport { useInterval } from \"../hooks/useInterval\";\nimport { getHours, getMinutes, getSeconds } from \"../utils\";\nimport { useState, useEffect } from \"react\";\n\nexport default function Timer() {\n  const isTracking = useSelector((state) => state.tracker.isTracking);\n  const [counter, setCounter] = useState(0);\n  const [interval, setInterval] = useState(null);\n\n  // start/stop counting intervals, when they are not needed\n  useEffect(() => {\n    if (!isTracking) {\n      setInterval(null);\n      setCounter(0);\n    } else {\n      setInterval(1000);\n    }\n  }, [isTracking]);\n\n  useInterval(() => {\n    if (isTracking) {\n      setCounter(counter + 1000);\n    }\n  }, interval);\n\n  return (\n    <div className=\"my-12 text-8xl\">\n      <span className=\"px-2 py-4 text-blue-900 bg-gray-200\">\n        {getHours(counter)}\n      </span>\n      <span className=\"text-gray-200\">:</span>\n      <span className=\"px-2 py-4 text-blue-900 bg-gray-200\">\n        {getMinutes(counter)}\n      </span>\n      <span className=\"text-gray-200\">:</span>\n      <span className=\"px-2 py-4 text-blue-900 bg-gray-200\">\n        {getSeconds(counter)}\n      </span>\n    </div>\n  );\n}\n","import { useSelector } from \"react-redux\";\n\nimport { getHours, getMinutes, getSeconds } from \"../utils\";\n\nconst Row = ({ start, end, duration }) => {\n  return (\n    <tr className=\"bg-white border-4 border-gray-200\">\n      <td className=\"px-16 py-2\">{new Date(start).toLocaleString()}</td>\n      <td className=\"px-16 py-2\">{new Date(end).toLocaleString()}</td>\n      <td className=\"px-16 py-2\">\n        {getHours(duration)}:{getMinutes(duration)}:{getSeconds(duration)}\n      </td>\n    </tr>\n  );\n};\n\nexport default function Table() {\n  const data = useSelector((state) => state.tracker.data);\n  return (\n    <table className=\"min-w-full table-auto\">\n      <thead className=\"justify-between\">\n        <tr className=\"bg-gray-800\">\n          <th className=\"px-16 py-2\">\n            <span className=\"text-gray-200\">Started at</span>\n          </th>\n          <th className=\"px-16 py-2\">\n            <span className=\"text-gray-200\">Ended at</span>\n          </th>\n          <th className=\"px-16 py-2\">\n            <span className=\"text-gray-200\">Duration</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody className=\"h-4 text-gray-800 bg-gray-200\">\n        {data ? (\n          data.map((item) => <Row key={item.start} {...item} />)\n        ) : (\n          <tr className=\"text-gray-800 bg-white border-4 border-gray-200\">\n            <td colSpan=\"4\">No data tracked yet</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { getHours, getMinutes, getSeconds } from \"../utils\";\n\nexport default function TotalTime() {\n  const totalTime = useSelector((state) => state.tracker.totalTime);\n\n  return (\n    <div className=\"mt-auto text-5xl text-center text-yellow-400\">\n      <span className=\"pr-16\">Total time:</span>\n      <span>\n        {\" \"}\n        {getHours(totalTime)}:{getMinutes(totalTime)}:{getSeconds(totalTime)}\n      </span>\n    </div>\n  );\n}\n","import Header from \"./components/header\";\nimport Button from \"./components/button\";\nimport Timer from \"./components/timer\";\nimport Table from \"./components/table\";\nimport TotalTime from \"./components/total-time\";\n\nfunction App() {\n  return (\n    <div className=\"w-full h-screen text-gray-100 bg-blue-900\">\n      <Header />\n      <main className=\"flex flex-col mx-4\">\n        <div className=\"mt-24 text-center\">\n          <Timer interval={0} />\n          <Button>Start tracking</Button>\n        </div>\n        <div className=\"mt-16 mb-16 text-center\">\n          <Table />\n        </div>\n        <TotalTime />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport trackerReducer from \"../features/trackerSlice\";\n\nexport default configureStore({\n  reducer: {\n    tracker: trackerReducer,\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}