{"version":3,"sources":["components/header.js","components/button.js","hooks/useInterval.js","utils.js","components/timer.js","components/table.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","role","aria-label","href","variants","start","stop","Button","React","forwardRef","ref","variant","props","children","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","getSeconds","counter","Math","floor","toString","padStart","getMinutes","getHours","Timer","isTracking","saveData","useState","setCounter","interval","counterRef","Row","end","duration","Date","toLocaleString","Table","data","length","map","item","key","colSpan","App","undefined","setIsTracking","setData","currentSession","setCurrentSession","totalTime","setTotalTime","c","now","d","getTimerData","useCallback","ms","prev","count","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bca71b25.chunk.js","sourcesContent":["export default function Header() {\n  return (\n    <header className=\"flex items-center justify-between p-8\">\n      <div className=\"flex\">\n        <span role=\"img\" aria-label=\"Clock\" className=\"text-4xl\">\n          ðŸ•‘\n        </span>\n        <p className=\"ml-4 font-mono text-2xl font-bold\">Time Tracker App</p>\n      </div>\n      <a className=\"text-xl underline hover:no-underline\" href=\"../\">\n        Back to other implementations\n      </a>\n    </header>\n  );\n}\n","import React from \"react\";\n\nconst variants = {\n  start: \"bg-yellow-500 hover:bg-yellow-600\",\n  stop: \"bg-red-500 hover:bg-red-600\",\n};\nconst Button = React.forwardRef(\n  ({ variant = \"start\", children, ...props }, ref) => {\n    return (\n      <button\n        ref={ref}\n        className={\n          \"py-4 px-8  text-gray-100 font-bold text-xl \" + variants[variant]\n        }\n        {...props}\n      >\n        {variant === \"start\" ? \"Start tracking\" : \"Stop tracking\"}\n      </button>\n    );\n  }\n);\n\nexport default Button;\n","import { useRef, useEffect } from \"react\";\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","export const getSeconds = (counter) =>\n  Math.floor((counter / 1000) % 60)\n    .toString()\n    .padStart(2, \"0\");\nexport const getMinutes = (counter) =>\n  Math.floor((counter / (1000 * 60)) % 60)\n    .toString()\n    .padStart(2, \"0\");\nexport const getHours = (counter) =>\n  Math.floor(counter / (1000 * 60 * 60))\n    .toString()\n    .padStart(2, \"0\");\n","import { useRef, useEffect, useState } from \"react\";\nimport { useInterval } from \"../hooks/useInterval\";\nimport { getHours, getMinutes, getSeconds } from \"../utils\";\n\nexport default function Timer({ isTracking, saveData }) {\n  const [counter, setCounter] = useState(0);\n  const [interval, setInterval] = useState(null);\n  const counterRef = useRef(0);\n\n  useEffect(() => {\n    counterRef.current = counter;\n  });\n\n  useInterval(() => {\n    if (isTracking) {\n      setCounter(counter + 1000);\n    }\n  }, interval);\n\n  useEffect(() => {\n    const startTimer = () => {\n      setCounter(0);\n      setInterval(1000);\n    };\n\n    const stopTimer = () => {\n      setInterval(null);\n      saveData(counterRef.current);\n    };\n\n    return isTracking ? startTimer() : stopTimer();\n  }, [isTracking, saveData]);\n\n  return (\n    <div className=\"my-12 text-8xl\">\n      <span className=\"px-2 py-4 text-blue-900 bg-gray-200\">\n        {getHours(counter)}\n      </span>\n      <span className=\"text-gray-200\">:</span>\n      <span className=\"px-2 py-4 text-blue-900 bg-gray-200\">\n        {getMinutes(counter)}\n      </span>\n      <span className=\"text-gray-200\">:</span>\n      <span className=\"px-2 py-4 text-blue-900 bg-gray-200\">\n        {getSeconds(counter)}\n      </span>\n    </div>\n  );\n}\n","import { getHours, getMinutes, getSeconds } from \"../utils\";\n\nconst Row = ({ start, end, duration }) => {\n  return (\n    <tr className=\"bg-white border-4 border-gray-200\">\n      <td className=\"px-16 py-2\">{new Date(start).toLocaleString()}</td>\n      <td className=\"px-16 py-2\">{new Date(end).toLocaleString()}</td>\n      <td className=\"px-16 py-2\">\n        {getHours(duration)}:{getMinutes(duration)}:{getSeconds(duration)}\n      </td>\n    </tr>\n  );\n};\nexport default function Table({ data }) {\n  return (\n    <table className=\"min-w-full table-auto\">\n      <thead className=\"justify-between\">\n        <tr className=\"bg-gray-800\">\n          <th className=\"px-16 py-2\">\n            <span className=\"text-gray-200\">Started at</span>\n          </th>\n          <th className=\"px-16 py-2\">\n            <span className=\"text-gray-200\">Ended at</span>\n          </th>\n          <th className=\"px-16 py-2\">\n            <span className=\"text-gray-200\">Duration</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody className=\"h-4 text-gray-800 bg-gray-200\">\n        {data && data.length > 0 ? (\n          data.map((item) => <Row {...item} key={item.start} />)\n        ) : (\n          <tr className=\"text-gray-800 bg-white border-4 border-gray-200\">\n            <td colSpan=\"4\">No data tracked yet</td>\n          </tr>\n        )}\n      </tbody>\n    </table>\n  );\n}\n","import { useState, useEffect, useCallback } from \"react\";\nimport Header from \"./components/header\";\nimport Button from \"./components/button\";\nimport Timer from \"./components/timer\";\nimport Table from \"./components/table\";\nimport { getHours, getMinutes, getSeconds } from \"./utils\";\n\nfunction App() {\n  const [isTracking, setIsTracking] = useState(undefined);\n  const [data, setData] = useState([]);\n  const [currentSession, setCurrentSession] = useState({});\n  const [totalTime, setTotalTime] = useState(0);\n\n  useEffect(() => {\n    if (isTracking === true) {\n      setCurrentSession((c) => ({ ...c, start: Date.now() }));\n    } else if (isTracking === false) {\n      setCurrentSession((c) => ({ ...c, end: Date.now() }));\n    }\n  }, [isTracking]);\n\n  useEffect(() => {\n    if (\n      \"start\" in currentSession &&\n      \"end\" in currentSession &&\n      \"duration\" in currentSession\n    ) {\n      setData((d) => d && [currentSession, ...d]);\n      setCurrentSession({});\n    }\n  }, [currentSession]);\n\n  const toggleTracker = () => {\n    setIsTracking(!isTracking);\n  };\n\n  const getTimerData = useCallback((ms) => {\n    setCurrentSession((c) => ({ ...c, duration: ms }));\n    setTotalTime((prev) => prev + ms);\n  }, []);\n  return (\n    <div className=\"w-full h-screen text-gray-100 bg-blue-900\">\n      <Header />\n      <main className=\"flex flex-col mx-4\">\n        <div className=\"mt-24 text-center\">\n          <Timer\n            isTracking={isTracking}\n            count={!isTracking && 0}\n            saveData={getTimerData}\n          />\n          <Button\n            variant={isTracking ? \"stop\" : \"start\"}\n            onClick={toggleTracker}\n          />\n        </div>\n        <div className=\"mt-16 mb-16 text-center\">\n          <Table data={data} />\n        </div>\n        <div className=\"mt-auto text-5xl text-center text-yellow-400\">\n          <span className=\"pr-16\">Total time:</span>\n          <span>\n            {\" \"}\n            {getHours(totalTime)}:{getMinutes(totalTime)}:\n            {getSeconds(totalTime)}\n          </span>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}